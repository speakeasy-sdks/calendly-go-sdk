// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/calendly-go-sdk/pkg/models/shared"
	"net/http"
)

type GetUserAvailabilitySchedulesRequest struct {
	// A URI reference to a user
	User *string `queryParam:"style=form,explode=true,name=user"`
}

type GetUserAvailabilitySchedules403ApplicationJSONMessageEnum string

const (
	GetUserAvailabilitySchedules403ApplicationJSONMessageEnumThisUserIsNotInYourOrganization GetUserAvailabilitySchedules403ApplicationJSONMessageEnum = "This user is not in your organization"
)

func (e *GetUserAvailabilitySchedules403ApplicationJSONMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "This user is not in your organization":
		*e = GetUserAvailabilitySchedules403ApplicationJSONMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserAvailabilitySchedules403ApplicationJSONMessageEnum: %s", s)
	}
}

type GetUserAvailabilitySchedules403ApplicationJSONTitleEnum string

const (
	GetUserAvailabilitySchedules403ApplicationJSONTitleEnumPermissionDenied GetUserAvailabilitySchedules403ApplicationJSONTitleEnum = "Permission Denied"
)

func (e *GetUserAvailabilitySchedules403ApplicationJSONTitleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Permission Denied":
		*e = GetUserAvailabilitySchedules403ApplicationJSONTitleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserAvailabilitySchedules403ApplicationJSONTitleEnum: %s", s)
	}
}

// GetUserAvailabilitySchedules403ApplicationJSON - Permission Denied
type GetUserAvailabilitySchedules403ApplicationJSON struct {
	Message *GetUserAvailabilitySchedules403ApplicationJSONMessageEnum `json:"message,omitempty"`
	Title   *GetUserAvailabilitySchedules403ApplicationJSONTitleEnum   `json:"title,omitempty"`
}

type GetUserAvailabilitySchedulesErrorResponseDetails struct {
	Message   string  `json:"message"`
	Parameter *string `json:"parameter,omitempty"`
}

// GetUserAvailabilitySchedulesErrorResponse - Error Object
type GetUserAvailabilitySchedulesErrorResponse struct {
	Details []GetUserAvailabilitySchedulesErrorResponseDetails `json:"details,omitempty"`
	Message string                                             `json:"message"`
	Title   string                                             `json:"title"`
}

// GetUserAvailabilitySchedules200ApplicationJSON - OK
type GetUserAvailabilitySchedules200ApplicationJSON struct {
	Collection []shared.AvailabilitySchedule `json:"collection"`
}

type GetUserAvailabilitySchedulesResponse struct {
	ContentType string
	// Request is not valid
	ErrorResponse *GetUserAvailabilitySchedulesErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// OK
	GetUserAvailabilitySchedules200ApplicationJSONObject *GetUserAvailabilitySchedules200ApplicationJSON
	// Permission Denied
	GetUserAvailabilitySchedules403ApplicationJSONObject *GetUserAvailabilitySchedules403ApplicationJSON
}
