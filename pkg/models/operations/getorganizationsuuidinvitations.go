// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/calendly-go-sdk/pkg/models/shared"
	"net/http"
)

type GetOrganizationsUUIDInvitationsPathParams struct {
	// The organization's unique identifier
	UUID string `pathParam:"style=simple,explode=false,name=uuid"`
}

// GetOrganizationsUUIDInvitationsStatusEnum - Indicates if the results should be filtered by status  ("pending", "accepted", or "declined")
type GetOrganizationsUUIDInvitationsStatusEnum string

const (
	GetOrganizationsUUIDInvitationsStatusEnumPending  GetOrganizationsUUIDInvitationsStatusEnum = "pending"
	GetOrganizationsUUIDInvitationsStatusEnumAccepted GetOrganizationsUUIDInvitationsStatusEnum = "accepted"
	GetOrganizationsUUIDInvitationsStatusEnumDeclined GetOrganizationsUUIDInvitationsStatusEnum = "declined"
)

func (e *GetOrganizationsUUIDInvitationsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "accepted":
		fallthrough
	case "declined":
		*e = GetOrganizationsUUIDInvitationsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationsUUIDInvitationsStatusEnum: %s", s)
	}
}

type GetOrganizationsUUIDInvitationsQueryParams struct {
	// The number of rows to return
	Count *float64 `queryParam:"style=form,explode=true,name=count"`
	// Indicates if the results should be filtered by email address
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// The token to pass to get the next or previous portion of the collection
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
	// Order results by the field name and direction specified (ascending or descending). Returns multiple sets of results in a comma-separated list.
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Indicates if the results should be filtered by status  ("pending", "accepted", or "declined")
	Status *GetOrganizationsUUIDInvitationsStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type GetOrganizationsUUIDInvitationsRequest struct {
	PathParams  GetOrganizationsUUIDInvitationsPathParams
	QueryParams GetOrganizationsUUIDInvitationsQueryParams
}

type GetOrganizationsUUIDInvitationsErrorResponseDetails struct {
	Message   string  `json:"message"`
	Parameter *string `json:"parameter,omitempty"`
}

// GetOrganizationsUUIDInvitationsErrorResponse - Error Object
type GetOrganizationsUUIDInvitationsErrorResponse struct {
	Details []GetOrganizationsUUIDInvitationsErrorResponseDetails `json:"details,omitempty"`
	Message string                                                `json:"message"`
	Title   string                                                `json:"title"`
}

// GetOrganizationsUUIDInvitations200ApplicationJSON - OK
type GetOrganizationsUUIDInvitations200ApplicationJSON struct {
	Collection []shared.OrganizationInvitation `json:"collection"`
	Pagination shared.Pagination               `json:"pagination"`
}

type GetOrganizationsUUIDInvitationsResponse struct {
	ContentType string
	// Request is not valid
	ErrorResponse *GetOrganizationsUUIDInvitationsErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// OK
	GetOrganizationsUUIDInvitations200ApplicationJSONObject *GetOrganizationsUUIDInvitations200ApplicationJSON
}
