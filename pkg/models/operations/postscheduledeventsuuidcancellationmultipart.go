// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/calendly-go-sdk/pkg/models/shared"
	"net/http"
)

type PostScheduledEventsUUIDCancellationPathParams struct {
	// The event's unique indentifier
	UUID string `pathParam:"style=simple,explode=false,name=uuid"`
}

type PostScheduledEventsUUIDCancellationMultipartRequest struct {
	PathParams PostScheduledEventsUUIDCancellationPathParams
	// Optional cancellation reason.
	Request map[string]interface{} `request:"mediaType=multipart/form-data"`
}

type PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum string

const (
	PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnumYouAreNotAllowedToCancelThisEvent PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum = "You are not allowed to cancel this event"
	PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnumEventInThePast                    PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum = "Event in the past"
	PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnumEventIsAlreadyCanceled            PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum = "Event is already canceled"
)

func (e *PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "You are not allowed to cancel this event":
		fallthrough
	case "Event in the past":
		fallthrough
	case "Event is already canceled":
		*e = PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum: %s", s)
	}
}

type PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnum string

const (
	PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnumPermissionDenied PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnum = "Permission Denied"
)

func (e *PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Permission Denied":
		*e = PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnum: %s", s)
	}
}

// PostScheduledEventsUUIDCancellationMultipart403ApplicationJSON - Caller not authorized to perform this action
type PostScheduledEventsUUIDCancellationMultipart403ApplicationJSON struct {
	Message *PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONMessageEnum `json:"message,omitempty"`
	Title   *PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONTitleEnum   `json:"title,omitempty"`
}

type PostScheduledEventsUUIDCancellationMultipartErrorResponseDetails struct {
	Message   string  `json:"message"`
	Parameter *string `json:"parameter,omitempty"`
}

// PostScheduledEventsUUIDCancellationMultipartErrorResponse - Error Object
type PostScheduledEventsUUIDCancellationMultipartErrorResponse struct {
	Details []PostScheduledEventsUUIDCancellationMultipartErrorResponseDetails `json:"details,omitempty"`
	Message string                                                             `json:"message"`
	Title   string                                                             `json:"title"`
}

// PostScheduledEventsUUIDCancellationMultipart201ApplicationJSON - Created
type PostScheduledEventsUUIDCancellationMultipart201ApplicationJSON struct {
	// Provides data pertaining to the cancellation of the Event
	Resource shared.Cancellation `json:"resource"`
}

type PostScheduledEventsUUIDCancellationMultipartResponse struct {
	ContentType string
	// Request is not valid
	ErrorResponse *PostScheduledEventsUUIDCancellationMultipartErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// Created
	PostScheduledEventsUUIDCancellationMultipart201ApplicationJSONObject *PostScheduledEventsUUIDCancellationMultipart201ApplicationJSON
	// Caller not authorized to perform this action
	PostScheduledEventsUUIDCancellationMultipart403ApplicationJSONObject *PostScheduledEventsUUIDCancellationMultipart403ApplicationJSON
}
