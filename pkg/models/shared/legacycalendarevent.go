// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LegacyCalendarEventKindEnum - Indicates the calendar provider the event belongs to.
type LegacyCalendarEventKindEnum string

const (
	LegacyCalendarEventKindEnumExchange       LegacyCalendarEventKindEnum = "exchange"
	LegacyCalendarEventKindEnumGoogle         LegacyCalendarEventKindEnum = "google"
	LegacyCalendarEventKindEnumIcloud         LegacyCalendarEventKindEnum = "icloud"
	LegacyCalendarEventKindEnumOutlook        LegacyCalendarEventKindEnum = "outlook"
	LegacyCalendarEventKindEnumOutlookDesktop LegacyCalendarEventKindEnum = "outlook_desktop"
)

func (e *LegacyCalendarEventKindEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "exchange":
		fallthrough
	case "google":
		fallthrough
	case "icloud":
		fallthrough
	case "outlook":
		fallthrough
	case "outlook_desktop":
		*e = LegacyCalendarEventKindEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LegacyCalendarEventKindEnum: %s", s)
	}
}

// LegacyCalendarEvent - Information about the calendar event from the calendar provider.
type LegacyCalendarEvent struct {
	// the id provided from the calendar provider for this calendar event.
	ExternalID string `json:"external_id"`
	// Indicates the calendar provider the event belongs to.
	Kind LegacyCalendarEventKindEnum `json:"kind"`
}
