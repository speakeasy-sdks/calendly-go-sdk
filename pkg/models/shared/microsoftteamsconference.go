// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MicrosoftTeamsConferenceDataAudioConferencing struct {
	ConferenceID *string `json:"conferenceId,omitempty"`
	DialinURL    *string `json:"dialinUrl,omitempty"`
	TollNumber   *string `json:"tollNumber,omitempty"`
}

// MicrosoftTeamsConferenceData - The conference metadata supplied by Microsoft Teams
type MicrosoftTeamsConferenceData struct {
	AudioConferencing *MicrosoftTeamsConferenceDataAudioConferencing `json:"audioConferencing,omitempty"`
	// The conference ID provided by Microsoft Teams
	ID *string `json:"id,omitempty"`
}

// MicrosoftTeamsConferenceStatusEnum - Indicates the current status of the Microsoft Teams conference
type MicrosoftTeamsConferenceStatusEnum string

const (
	MicrosoftTeamsConferenceStatusEnumInitiated  MicrosoftTeamsConferenceStatusEnum = "initiated"
	MicrosoftTeamsConferenceStatusEnumProcessing MicrosoftTeamsConferenceStatusEnum = "processing"
	MicrosoftTeamsConferenceStatusEnumPushed     MicrosoftTeamsConferenceStatusEnum = "pushed"
	MicrosoftTeamsConferenceStatusEnumFailed     MicrosoftTeamsConferenceStatusEnum = "failed"
)

func (e *MicrosoftTeamsConferenceStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initiated":
		fallthrough
	case "processing":
		fallthrough
	case "pushed":
		fallthrough
	case "failed":
		*e = MicrosoftTeamsConferenceStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MicrosoftTeamsConferenceStatusEnum: %s", s)
	}
}

// MicrosoftTeamsConferenceTypeEnum - The event location is a Zoom conference
type MicrosoftTeamsConferenceTypeEnum string

const (
	MicrosoftTeamsConferenceTypeEnumMicrosoftTeamsConference MicrosoftTeamsConferenceTypeEnum = "microsoft_teams_conference"
)

func (e *MicrosoftTeamsConferenceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "microsoft_teams_conference":
		*e = MicrosoftTeamsConferenceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MicrosoftTeamsConferenceTypeEnum: %s", s)
	}
}

// MicrosoftTeamsConference - Meeting will take place in a Microsoft Teams conference
type MicrosoftTeamsConference struct {
	// The conference metadata supplied by Microsoft Teams
	Data MicrosoftTeamsConferenceData `json:"data"`
	// Microsoft Teams meeting url
	JoinURL string `json:"join_url"`
	// Indicates the current status of the Microsoft Teams conference
	Status MicrosoftTeamsConferenceStatusEnum `json:"status"`
	// The event location is a Zoom conference
	Type MicrosoftTeamsConferenceTypeEnum `json:"type"`
}
