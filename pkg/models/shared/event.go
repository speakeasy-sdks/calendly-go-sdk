// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type EventEventMemberships struct {
	// Canonical reference (unique identifier) for the user
	User string `json:"user"`
}

type EventInviteesCounter struct {
	// Total invitees for an event that have not canceled
	Active float64 `json:"active"`
	// Maximum number of active invitees that can book the event
	Limit float64 `json:"limit"`
	// Total invitees for an event, including invitees that have canceled
	Total float64 `json:"total"`
}

// EventStatusEnum - Indicates if the event is "active" or "canceled"
type EventStatusEnum string

const (
	EventStatusEnumActive   EventStatusEnum = "active"
	EventStatusEnumCanceled EventStatusEnum = "canceled"
)

func (e *EventStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "canceled":
		*e = EventStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EventStatusEnum: %s", s)
	}
}

// Event - Information about a scheduled meeting
type Event struct {
	// Information about the calendar event from the calendar provider.
	CalendarEvent LegacyCalendarEvent `json:"calendar_event"`
	// Provides data pertaining to the cancellation of the Event
	Cancellation *Cancellation `json:"cancellation,omitempty"`
	// The moment when the event was created (e.g. "2020-01-02T03:04:05.678123Z")
	CreatedAt time.Time `json:"created_at"`
	// The moment the event was scheduled to end in UTC time (e.g. "2020-01-02T03:04:05.678123Z")
	EndTime time.Time `json:"end_time"`
	// Additional people added to an event by an invitee
	EventGuests []Guest `json:"event_guests"`
	// Event membership list
	EventMemberships []EventEventMemberships `json:"event_memberships"`
	// The event type associated with this event
	EventType       string               `json:"event_type"`
	InviteesCounter EventInviteesCounter `json:"invitees_counter"`
	// The polymorphic base type for an event location that Calendly supports
	Location Location `json:"location"`
	// The event name
	Name string `json:"name"`
	// The moment the event was scheduled to start in UTC time (e.g. "2020-01-02T03:04:05.678123Z").
	StartTime time.Time `json:"start_time"`
	// Indicates if the event is "active" or "canceled"
	Status EventStatusEnum `json:"status"`
	// The moment when the event was last updated (e.g. "2020-01-02T03:04:05.678123Z")
	UpdatedAt time.Time `json:"updated_at"`
	// Canonical reference (unique identifier) for the resource
	URI string `json:"uri"`
}
