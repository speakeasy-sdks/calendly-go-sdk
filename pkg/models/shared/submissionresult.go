// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type SubmissionResultType string

const (
	SubmissionResultTypeSubmissionEventTypeResult     SubmissionResultType = "SubmissionEventTypeResult"
	SubmissionResultTypeSubmissionExternalURLResult   SubmissionResultType = "SubmissionExternalUrlResult"
	SubmissionResultTypeSubmissionCustomMessageResult SubmissionResultType = "SubmissionCustomMessageResult"
)

type SubmissionResult struct {
	SubmissionEventTypeResult     *SubmissionEventTypeResult
	SubmissionExternalURLResult   *SubmissionExternalURLResult
	SubmissionCustomMessageResult *SubmissionCustomMessageResult

	Type SubmissionResultType
}

func CreateSubmissionResultSubmissionEventTypeResult(submissionEventTypeResult SubmissionEventTypeResult) SubmissionResult {
	typ := SubmissionResultTypeSubmissionEventTypeResult

	return SubmissionResult{
		SubmissionEventTypeResult: &submissionEventTypeResult,
		Type:                      typ,
	}
}

func CreateSubmissionResultSubmissionExternalURLResult(submissionExternalURLResult SubmissionExternalURLResult) SubmissionResult {
	typ := SubmissionResultTypeSubmissionExternalURLResult

	return SubmissionResult{
		SubmissionExternalURLResult: &submissionExternalURLResult,
		Type:                        typ,
	}
}

func CreateSubmissionResultSubmissionCustomMessageResult(submissionCustomMessageResult SubmissionCustomMessageResult) SubmissionResult {
	typ := SubmissionResultTypeSubmissionCustomMessageResult

	return SubmissionResult{
		SubmissionCustomMessageResult: &submissionCustomMessageResult,
		Type:                          typ,
	}
}

func (u *SubmissionResult) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	submissionEventTypeResult := new(SubmissionEventTypeResult)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&submissionEventTypeResult); err == nil {
		u.SubmissionEventTypeResult = submissionEventTypeResult
		u.Type = SubmissionResultTypeSubmissionEventTypeResult
		return nil
	}

	submissionExternalURLResult := new(SubmissionExternalURLResult)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&submissionExternalURLResult); err == nil {
		u.SubmissionExternalURLResult = submissionExternalURLResult
		u.Type = SubmissionResultTypeSubmissionExternalURLResult
		return nil
	}

	submissionCustomMessageResult := new(SubmissionCustomMessageResult)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&submissionCustomMessageResult); err == nil {
		u.SubmissionCustomMessageResult = submissionCustomMessageResult
		u.Type = SubmissionResultTypeSubmissionCustomMessageResult
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SubmissionResult) MarshalJSON() ([]byte, error) {
	if u.SubmissionEventTypeResult != nil {
		return json.Marshal(u.SubmissionEventTypeResult)
	}

	if u.SubmissionExternalURLResult != nil {
		return json.Marshal(u.SubmissionExternalURLResult)
	}

	if u.SubmissionCustomMessageResult != nil {
		return json.Marshal(u.SubmissionCustomMessageResult)
	}

	return nil, nil
}
