// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QuestionTypeEnum - Question type: name, text input, email, phone, textarea input, dropdown list or radio button list.
type QuestionTypeEnum string

const (
	QuestionTypeEnumName     QuestionTypeEnum = "name"
	QuestionTypeEnumText     QuestionTypeEnum = "text"
	QuestionTypeEnumEmail    QuestionTypeEnum = "email"
	QuestionTypeEnumPhone    QuestionTypeEnum = "phone"
	QuestionTypeEnumTextarea QuestionTypeEnum = "textarea"
	QuestionTypeEnumSelect   QuestionTypeEnum = "select"
	QuestionTypeEnumRadios   QuestionTypeEnum = "radios"
)

func (e *QuestionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "name":
		fallthrough
	case "text":
		fallthrough
	case "email":
		fallthrough
	case "phone":
		fallthrough
	case "textarea":
		fallthrough
	case "select":
		fallthrough
	case "radios":
		*e = QuestionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QuestionTypeEnum: %s", s)
	}
}

// Question - Routing form questions.
type Question struct {
	// The respondentâ€™s option(s) for "select" or "radios" types of questions.
	AnswerChoices []string `json:"answer_choices"`
	// Question name (in human-readable format).
	Name string `json:"name"`
	// true if an answer to the question is required for respondents to submit the routing form; false if not required.
	//
	Required bool `json:"required"`
	// Question type: name, text input, email, phone, textarea input, dropdown list or radio button list.
	Type QuestionTypeEnum `json:"type"`
	// Unique identifier for the routing form question.
	UUID string `json:"uuid"`
}
