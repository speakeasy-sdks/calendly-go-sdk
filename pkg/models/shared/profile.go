// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProfileTypeEnum - Indicates if the profile belongs to a "user" (individual) or "team"
type ProfileTypeEnum string

const (
	ProfileTypeEnumUser ProfileTypeEnum = "User"
	ProfileTypeEnumTeam ProfileTypeEnum = "Team"
)

func (e *ProfileTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "User":
		fallthrough
	case "Team":
		*e = ProfileTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProfileTypeEnum: %s", s)
	}
}

// Profile - The publicly visible profile of a User or a Team that's associated with the Event Type (note: some Event Types don't have profiles)
type Profile struct {
	// Human-readable name for the profile of the user that's associated with the event type
	Name string `json:"name"`
	// The unique reference to the user associated with the profile
	Owner string `json:"owner"`
	// Indicates if the profile belongs to a "user" (individual) or "team"
	Type ProfileTypeEnum `json:"type"`
}
